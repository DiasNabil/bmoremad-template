{
  "hooks": [
    {
      "name": "security-validator",
      "type": "command",
      "when": "PreToolUse",
      "matcher": {
        "tools": ["Write", "Edit", "MultiEdit", "Bash", "Task"]
      },
      "command": "$CLAUDE_PROJECT_DIR/hooks/security-validator.bat",
      "description": "Validates security constraints before tool execution",
      "timeout": 15000,
      "failureAction": "block"
    },
    {
      "name": "performance-monitor",
      "type": "command", 
      "when": "PostToolUse",
      "matcher": {
        "tools": ["*"]
      },
      "command": "$CLAUDE_PROJECT_DIR/hooks/performance-monitor.bat",
      "description": "Monitors system performance after tool usage",
      "timeout": 10000,
      "failureAction": "warn"
    },
    {
      "name": "audit-logger",
      "type": "command",
      "when": "UserPromptSubmit",
      "command": "$CLAUDE_PROJECT_DIR/hooks/audit-logger.bat",
      "description": "Logs user interactions for audit trail",
      "timeout": 5000,
      "failureAction": "continue"
    },
    {
      "name": "file-formatter",
      "type": "command",
      "when": "PostToolUse",
      "matcher": {
        "tools": ["Write", "Edit", "MultiEdit"]
      },
      "command": "$CLAUDE_PROJECT_DIR/hooks/file-formatter.bat",
      "description": "Auto-formats code files after modifications",
      "timeout": 30000,
      "failureAction": "warn"
    },
    {
      "name": "mcp-coordination-manager",
      "type": "command",
      "when": "PreToolUse", 
      "matcher": {
        "tools": ["Task"]
      },
      "command": "$CLAUDE_PROJECT_DIR/hooks/mcp-coordination-validator.bat",
      "description": "Manages MCP agent coordination and resource allocation",
      "timeout": 20000,
      "failureAction": "block"
    },
    {
      "name": "session-initializer",
      "type": "command",
      "when": "SessionStart",
      "command": "$CLAUDE_PROJECT_DIR/hooks/session-initializer.bat",
      "description": "Initializes BMAD environment and validates setup",
      "timeout": 15000,
      "failureAction": "warn"
    },
    {
      "name": "session-cleanup",
      "type": "command",
      "when": "SessionEnd", 
      "command": "$CLAUDE_PROJECT_DIR/hooks/session-cleanup.bat",
      "description": "Cleans up resources and generates session summary",
      "timeout": 20000,
      "failureAction": "continue"
    }
  ],
  "security": {
    "blocked_commands": [
      "rm -rf",
      "sudo",
      "chmod 777",
      "mv /", 
      "dd if=",
      "format C:",
      "> /dev/",
      ":(){ :|:& };:",
      "wget",
      "curl -X POST",
      "nc -l",
      "python -c \"import os; os.system",
      "eval ",
      "exec(",
      "powershell -EncodedCommand",
      "cmd /c start",
      "net user",
      "reg add",
      "sc create"
    ],
    "allowed_directories": [
      "docs/",
      ".claude/",
      "src/",
      "tests/",
      "logs/",
      "scripts/",
      "hooks/",
      ".bmad-core/",
      "agents-harmonization-pack/"
    ],
    "blocked_directories": [
      ".env",
      ".git/",
      "/etc/",
      "/usr/",
      "/root/",
      "C:\\Windows\\",
      "C:\\Program Files\\",
      "~/.ssh/",
      "~/.aws/"
    ],
    "file_size_limits": {
      "max_file_size_mb": 10,
      "max_total_files": 100
    },
    "audit_settings": {
      "log_all_commands": true,
      "log_file_access": true,
      "log_security_events": true,
      "retention_days": 90,
      "alert_on_blocked_commands": true
    }
  },
  "bmad_integration": {
    "enabled": true,
    "core_config_path": ".bmad-core/core-config.yaml",
    "default_agent": "bmad-orchestrator",
    "command_prefix": "BMad",
    "agent_transform_prefix": "*",
    "workflow_prefix": "*workflow",
    "audit_logging": true,
    "performance_monitoring": true,
    "auto_load_files": [
      "CLAUDE.md",
      "docs/architecture/coding-standards.md",
      "docs/architecture/tech-stack.md",
      "docs/architecture/source-tree.md",
      "IMPLEMENTATION-PROGRESS.md"
    ]
  },
  "natural_language_processing": {
    "enabled": true,
    "intent_routing_matrix": "agents-harmonization-pack/02-INTENT-ROUTING-MATRIX.md",
    "french_command_aliases": {
      "cadrer besoin": "/BMad/init-prd",
      "cadrer le besoin": "/BMad/init-prd",
      "définir architecture": "/BMad/init-architecture",
      "définir l'architecture": "/BMad/init-architecture", 
      "découper stories": "/BMad/shard-stories",
      "découper en stories": "/BMad/shard-stories",
      "prochaine story": "/BMad/run-next-story",
      "attaquer la prochaine story": "/BMad/run-next-story",
      "passer QA": "/BMad/qa-gate",
      "passer en QA": "/BMad/qa-gate",
      "lancer équipe": "/BMad/team-coordination",
      "coordonner agents": "/BMad/parallel-coordinator"
    },
    "confidence_threshold": 0.85,
    "fallback_agent": "bmad-orchestrator"
  },
  "mcp_integration": {
    "enabled": true,
    "config_file": "project.mcp.json",
    "parallel_coordination": {
      "max_concurrent_agents": 6,
      "resource_allocation": {
        "cpu_threshold_percent": 80,
        "memory_threshold_percent": 75,
        "execution_timeout_ms": 300000,
        "coordination_timeout_ms": 450000
      },
      "agent_priorities": {
        "bmad-parallel-orchestrator": {
          "priority": 1,
          "resource_weight": 0.3,
          "specialization": "coordination"
        },
        "contains-eng-devops": {
          "priority": 2,
          "resource_weight": 0.25,
          "specialization": "validation"
        },
        "contains-test-analyzer": {
          "priority": 2,
          "resource_weight": 0.2,
          "specialization": "quality_assurance"
        },
        "bmad-architect": {
          "priority": 3,
          "resource_weight": 0.25,
          "specialization": "design"
        }
      },
      "conflict_resolution": {
        "strategy": "priority_based",
        "max_wait_time_ms": 30000,
        "retry_attempts": 3,
        "backoff_multiplier": 1.5
      }
    },
    "security_settings": {
      "server_validation": true,
      "connection_encryption": "TLS_1_3",
      "audit_all_requests": true,
      "rate_limiting": {
        "requests_per_minute": 60,
        "burst_limit": 10
      }
    },
    "monitoring": {
      "health_check_interval_ms": 30000,
      "performance_metrics": true,
      "alert_on_failures": true,
      "log_response_times": true
    }
  },
  "performance_optimization": {
    "caching": {
      "enable_agent_cache": true,
      "cache_duration_minutes": 30,
      "max_cache_size_mb": 100
    },
    "parallel_execution": {
      "enable_parallel_tools": true,
      "max_parallel_tools": 3,
      "coordination_overhead_ms": 500
    },
    "resource_management": {
      "cleanup_interval_minutes": 15,
      "max_log_file_size_mb": 50,
      "compress_old_logs": true
    }
  },
  "development_settings": {
    "debug_mode": false,
    "verbose_logging": false,
    "development_shortcuts": {
      "quick_test": "/BMad/run-quick-tests",
      "full_test": "/BMad/run-full-test-suite", 
      "deploy": "/BMad/deploy-to-staging"
    },
    "auto_format": {
      "on_save": true,
      "languages": ["javascript", "typescript", "python", "yaml", "json", "markdown"],
      "format_timeout_ms": 15000
    }
  },
  "notification_settings": {
    "enable_notifications": true,
    "notification_types": {
      "security_alerts": true,
      "performance_warnings": true,
      "agent_coordination_events": true,
      "session_summaries": false
    },
    "notification_channels": {
      "console": true,
      "log_file": true,
      "system_tray": false
    }
  }
}